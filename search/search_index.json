{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"EPIC Python Package EPIC Python package! Installation Prerequisites Before starting the installation, ensure you have wget and conda are installed. for wget apt-get install wget dpkg -l | grep wget for conda Download the installer: Miniconda installer for Linux. Anaconda Distribution installer for Linux. Miniforge installer for Linux. Verify your installer hashes. In your terminal window, run: bash <conda-installer-name>-latest-Linux-x86_64.sh Installing Package Setup a Virtual environment. (conda Recommended) conda create --name epic_env python=3.9 conda activate epic_env Install the EPIC Python Package pip install git+https://github.com/smarsGroup/EPIC-pkg.git Commands Available Epic_pkg allows you to run various commands. The structure is: epic_pkg {module} {func} -options List of Modules and Functions: workspace new : Create a new workspace with a template structure. prepare : Prepare the input files using config file. list_files : Create lst.DAT files using config file. run : Execute the simulations. weather download_daily : Download daily weather data. daily2monthly : Convert daily weather data to monthly. download_windspeed : Download wind speed data. soil process_gdb : Process ssurgo gdb file. sites process_aoi : Process area of interest file. (TODO) process_foi : Process fields of interest file. (TODO) generate : Generate site files from processed data. For more details on each command and its options, use: epic_pkg {module} {func} --help","title":"Home"},{"location":"#epic-python-package","text":"EPIC Python package!","title":"EPIC Python Package"},{"location":"#installation","text":"","title":"Installation"},{"location":"#prerequisites","text":"Before starting the installation, ensure you have wget and conda are installed.","title":"Prerequisites"},{"location":"#for-wget","text":"apt-get install wget dpkg -l | grep wget","title":"for wget"},{"location":"#for-conda","text":"Download the installer: Miniconda installer for Linux. Anaconda Distribution installer for Linux. Miniforge installer for Linux. Verify your installer hashes. In your terminal window, run: bash <conda-installer-name>-latest-Linux-x86_64.sh","title":"for conda"},{"location":"#installing-package","text":"Setup a Virtual environment. (conda Recommended) conda create --name epic_env python=3.9 conda activate epic_env Install the EPIC Python Package pip install git+https://github.com/smarsGroup/EPIC-pkg.git","title":"Installing Package"},{"location":"#commands-available","text":"Epic_pkg allows you to run various commands. The structure is: epic_pkg {module} {func} -options","title":"Commands Available"},{"location":"#list-of-modules-and-functions","text":"","title":"List of Modules and Functions:"},{"location":"#workspace","text":"new : Create a new workspace with a template structure. prepare : Prepare the input files using config file. list_files : Create lst.DAT files using config file. run : Execute the simulations.","title":"workspace"},{"location":"#weather","text":"download_daily : Download daily weather data. daily2monthly : Convert daily weather data to monthly. download_windspeed : Download wind speed data.","title":"weather"},{"location":"#soil","text":"process_gdb : Process ssurgo gdb file.","title":"soil"},{"location":"#sites","text":"process_aoi : Process area of interest file. (TODO) process_foi : Process fields of interest file. (TODO) generate : Generate site files from processed data. For more details on each command and its options, use: epic_pkg {module} {func} --help","title":"sites"},{"location":"OPC/","text":"PhenoCrop OPC refers to the agricultural management practice files which is yet to automated. For now, you need to prpare management files and keep it in a new folder named 'OPC' inside the 'Test' directory.","title":"Crop Management Info"},{"location":"OPC/#phenocrop","text":"OPC refers to the agricultural management practice files which is yet to automated. For now, you need to prpare management files and keep it in a new folder named 'OPC' inside the 'Test' directory.","title":"PhenoCrop"},{"location":"Soil/","text":"USDA gSSURGO Link: https://www.nrcs.usda.gov/resources/data-and-reports/gridded-soil-survey-geographic-gssurgo-database Since this step is mandatory to create soil input file for the model, go to the link and download the required soil database. Example: For Maryland, go to State Database-soils|Powered by Box link to download gSSURGO_MD.zip and keep it in soil folder after extarcing it.","title":"Soil"},{"location":"Soil/#usda-gssurgo","text":"Link: https://www.nrcs.usda.gov/resources/data-and-reports/gridded-soil-survey-geographic-gssurgo-database Since this step is mandatory to create soil input file for the model, go to the link and download the required soil database. Example: For Maryland, go to State Database-soils|Powered by Box link to download gSSURGO_MD.zip and keep it in soil folder after extarcing it.","title":"USDA gSSURGO"},{"location":"Weather/","text":"Weather data sources a) DAYMET Link: https://daymet.ornl.gov/ b) NLDAS Link: https://climatedataguide.ucar.edu/climate-data/nldas-north-american-land-data-assimilation-system/ Using the crop-sequence boundary, the weather files are automatically downloaded to create input files for AOI, but weather files are stored on the server while operating the simulations without offline storage and deleted automatically after simulation. To download weather files automatically, use the following commands: epic_pkg weather download daily This command will only work if you already installed the package, created workspace and downloaded the crop-sequence-boundary.","title":"Weather"},{"location":"Weather/#weather-data-sources","text":"","title":"Weather data sources"},{"location":"Weather/#a-daymet","text":"Link: https://daymet.ornl.gov/","title":"a) DAYMET"},{"location":"Weather/#b-nldas","text":"Link: https://climatedataguide.ucar.edu/climate-data/nldas-north-american-land-data-assimilation-system/ Using the crop-sequence boundary, the weather files are automatically downloaded to create input files for AOI, but weather files are stored on the server while operating the simulations without offline storage and deleted automatically after simulation. To download weather files automatically, use the following commands: epic_pkg weather download daily This command will only work if you already installed the package, created workspace and downloaded the crop-sequence-boundary.","title":"b) NLDAS"},{"location":"api/","text":"","title":"API"},{"location":"csb/","text":"Go to https://www.nass.usda.gov/Research_and_Science/Crop-Sequence-Boundaries/index.php and Download the Crop Sequence Boundaries 2016-2023 dataset and extract it. This crop sequence boundary contains the crop-field shapefiles for whole USA. You can clip it for your AOI. Example: If you are working in Maryland state, just clip it for Maryland and keep it in a new folder named 'CropRotations'.","title":"Crop Sequence Boundaries"},{"location":"epic/","text":"ENVIRONMENTAL POLICY INTEGRATED CLIMATE (EPIC) MODEL EPIC model is a cropping systems simulation tool designed to assess the impact of erosion on soil productivity. Its development stemmed from the critical need for improved technology, identified in the 1980 Soil and Water Resources Conservation Act analysis, to evaluate the consequences of soil erosion on agricultural output. EPIC employs a single crop growth model with unique parameter sets for approximately eighty different crops. This enables the model to simulate the effects of various management practices on soil, water, nutrients, and pesticide dynamics. EPIC can further integrate these effects to predict long-term consequences for homogeneous soil and management areas, including soil loss, water quality, and crop yields. The EPIC model offers high temporal resolution, simulating agricultural systems on a daily basis for extended periods. Continuously refined since its development, EPIC incorporates algorithms to model water quality, nutrient cycling, climate change impacts, and atmospheric CO2 effects. This comprehensive model allows configuration for diverse cropping systems, management practices, and assesses erosion costs to aid in optimizing agricultural strategies. For more details, read this: https://epicapex.tamu.edu/media/rckfgmxs/epic1102-user-manual-2024-01-24.pdf","title":"EPIC model"},{"location":"epic/#environmental-policy-integrated-climate-epic-model","text":"EPIC model is a cropping systems simulation tool designed to assess the impact of erosion on soil productivity. Its development stemmed from the critical need for improved technology, identified in the 1980 Soil and Water Resources Conservation Act analysis, to evaluate the consequences of soil erosion on agricultural output. EPIC employs a single crop growth model with unique parameter sets for approximately eighty different crops. This enables the model to simulate the effects of various management practices on soil, water, nutrients, and pesticide dynamics. EPIC can further integrate these effects to predict long-term consequences for homogeneous soil and management areas, including soil loss, water quality, and crop yields. The EPIC model offers high temporal resolution, simulating agricultural systems on a daily basis for extended periods. Continuously refined since its development, EPIC incorporates algorithms to model water quality, nutrient cycling, climate change impacts, and atmospheric CO2 effects. This comprehensive model allows configuration for diverse cropping systems, management practices, and assesses erosion costs to aid in optimizing agricultural strategies. For more details, read this: https://epicapex.tamu.edu/media/rckfgmxs/epic1102-user-manual-2024-01-24.pdf","title":"ENVIRONMENTAL POLICY INTEGRATED CLIMATE (EPIC) MODEL"},{"location":"runexp/","text":"Run an EPIC Experiment 1. Create new workspace epic_pkg workspace new -w Test cd Test It willl create a new workspace in the new directory named 'Test'. This 'Test' folder will automatically create sub-folders for EPIC model like model, opc, sites, soil, weather and a config.yml doc in it. You need to to go to Test folder before simulation starts. 2. Input data preparation a) For soil: Go to https://www.nrcs.usda.gov/resources/data-and-reports/gridded-soil-survey-geographic-gssurgo-database and download the required soil database. Example: For Maryland, go to State Database-soils|Powered by Box link to download gSSURGO_MD.zip and keep it in soil folder after extarcing it. b) For Weather and sites Go to https://www.nass.usda.gov/Research_and_Science/Crop-Sequence-Boundaries/index.php and Download the Crop Sequence Boundaries 2016-2023 dataset and extract it. This crop sequence boundary contains the crop-field shapefiles for whole USA. You can clip it for your AOI. Like if you are working in Maryland state, just clip it for Maryland and keep it in a new folder named 'CropRotations'. NOTE : Using the crop-sequence boundary, the weather and sites files are automatically downloaded to create input files for AOI, but only the sites files are downloaded offline and stored in the respective folder. Weather files are stored on the server while operating the simulations without offline storage and deleted automatically after simulation. To download weather files automatically, use the following commands: epic_pkg weather download daily This command will only work if you already installed the package, created workspace and downloaded the crop-sequence-boundary. 3. Edit config file as needed Since this package is designed to work for USA-based study regions. In the config.yml file, you need to change the following rows as per your AOI and convenience, but you can adopt the following practice: Let's say you have to run the model for Maryland state of USA, change following rows: a) EXPName: EPIC RUN (Carbon or Nitrogen Assessment) (You can keep anything) Region: Maryland code: MD Fields_of_Interests: ./CropRotations/MDRotFilt.shp Note: This MDRotFilt.shp is the same file we downloaded and kept in the CropRotations folder in the previous step. b) Soil: gdb_path: 4. Before going to editing the ./soil/MD_slopelen_1.csv The thumb-rule is that the config file should be edited considering the code name of the study region. Like you did it here by replacing MD in the config file throughout. 4. Prepare OPC File OPC refers to the agricultural management practice files which is yet to automated. For now, you need to prpare management files and keep it in a new folder named 'OPC' inside the 'Test' directory. 5. Prepare the workspace epic_pkg workspace prepare This command will automatically pre-process the input files before simulation. 6. And execute the simulations epic_pkg workspace run This command will simulate the operation/s and automatically save the results in a new folder named 'Output'. This command will also create a post_process.pynb doc which will have an example code to visualize the required parameters from ACY and DGN files. You can edit this code as per your requirements. You just have to identify the parameters and edit accordingly. Example Visualization 7. Post-process the output visualization You need to post-process the output files according to your interests. Generally, as an agricultural reserachers you need to process the DGN and ACY files. For post-processing epic_pkg workspace post_process This will run the example code post_process.pynb which has been created in the Test folder. It will take a variable called 'YLDG' which denotes the yearly yield in t/ha/yr for all the sites and put it in a sepearte column corresponding to all the site ids with creatinh a yldg.csv file. For visualization epic_pkg workspace visualize It will simply plot the 'YLDG' variable corresponding to the site ids and crate a map for study region. Your example plot will look like this:","title":"Quick Start Guide"},{"location":"runexp/#run-an-epic-experiment","text":"","title":"Run an EPIC Experiment"},{"location":"runexp/#1-create-new-workspace","text":"epic_pkg workspace new -w Test cd Test It willl create a new workspace in the new directory named 'Test'. This 'Test' folder will automatically create sub-folders for EPIC model like model, opc, sites, soil, weather and a config.yml doc in it. You need to to go to Test folder before simulation starts.","title":"1. Create new workspace"},{"location":"runexp/#2-input-data-preparation","text":"","title":"2. Input data preparation"},{"location":"runexp/#a-for-soil","text":"Go to https://www.nrcs.usda.gov/resources/data-and-reports/gridded-soil-survey-geographic-gssurgo-database and download the required soil database. Example: For Maryland, go to State Database-soils|Powered by Box link to download gSSURGO_MD.zip and keep it in soil folder after extarcing it.","title":"a) For soil:"},{"location":"runexp/#b-for-weather-and-sites","text":"Go to https://www.nass.usda.gov/Research_and_Science/Crop-Sequence-Boundaries/index.php and Download the Crop Sequence Boundaries 2016-2023 dataset and extract it. This crop sequence boundary contains the crop-field shapefiles for whole USA. You can clip it for your AOI. Like if you are working in Maryland state, just clip it for Maryland and keep it in a new folder named 'CropRotations'. NOTE : Using the crop-sequence boundary, the weather and sites files are automatically downloaded to create input files for AOI, but only the sites files are downloaded offline and stored in the respective folder. Weather files are stored on the server while operating the simulations without offline storage and deleted automatically after simulation. To download weather files automatically, use the following commands: epic_pkg weather download daily This command will only work if you already installed the package, created workspace and downloaded the crop-sequence-boundary.","title":"b) For Weather and sites"},{"location":"runexp/#3-edit-config-file-as-needed","text":"Since this package is designed to work for USA-based study regions. In the config.yml file, you need to change the following rows as per your AOI and convenience, but you can adopt the following practice: Let's say you have to run the model for Maryland state of USA, change following rows: a) EXPName: EPIC RUN (Carbon or Nitrogen Assessment) (You can keep anything) Region: Maryland code: MD Fields_of_Interests: ./CropRotations/MDRotFilt.shp Note: This MDRotFilt.shp is the same file we downloaded and kept in the CropRotations folder in the previous step. b) Soil: gdb_path: 4. Before going to editing the ./soil/MD_slopelen_1.csv The thumb-rule is that the config file should be edited considering the code name of the study region. Like you did it here by replacing MD in the config file throughout.","title":"3. Edit config file as needed"},{"location":"runexp/#4-prepare-opc-file","text":"OPC refers to the agricultural management practice files which is yet to automated. For now, you need to prpare management files and keep it in a new folder named 'OPC' inside the 'Test' directory.","title":"4. Prepare OPC File"},{"location":"runexp/#5-prepare-the-workspace","text":"epic_pkg workspace prepare This command will automatically pre-process the input files before simulation.","title":"5. Prepare the workspace"},{"location":"runexp/#6-and-execute-the-simulations","text":"epic_pkg workspace run This command will simulate the operation/s and automatically save the results in a new folder named 'Output'. This command will also create a post_process.pynb doc which will have an example code to visualize the required parameters from ACY and DGN files. You can edit this code as per your requirements. You just have to identify the parameters and edit accordingly.","title":"6. And execute the simulations"},{"location":"runexp/#example-visualization","text":"","title":"Example Visualization"},{"location":"runexp/#7-post-process-the-output-visualization","text":"You need to post-process the output files according to your interests. Generally, as an agricultural reserachers you need to process the DGN and ACY files.","title":"7. Post-process the output visualization"},{"location":"runexp/#for-post-processing","text":"epic_pkg workspace post_process This will run the example code post_process.pynb which has been created in the Test folder. It will take a variable called 'YLDG' which denotes the yearly yield in t/ha/yr for all the sites and put it in a sepearte column corresponding to all the site ids with creatinh a yldg.csv file.","title":"For post-processing"},{"location":"runexp/#for-visualization","text":"epic_pkg workspace visualize It will simply plot the 'YLDG' variable corresponding to the site ids and crate a map for study region.","title":"For visualization"},{"location":"runexp/#your-example-plot-will-look-like-this","text":"","title":"Your example plot will look like this:"}]}